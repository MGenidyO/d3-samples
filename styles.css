* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    display: grid;
    place-items: center;
    height: 100vh;
}

#svg_container {
    width: 80vw;
    height: 60%;
}

.floormap {
    width: 100%;
    height: 100%;
}

.apartment {
    fill: gray;
}
.areas, .entrances {
    fill: white;

    &>*:hover, &>*:active {
        fill: orange;
    }
}

.main-entrance, .hallway {
    fill: yellow;
}

.bedroom-door, .bedroom {
    fill: blue;
}

.utility-room-door, .utility-room {
    fill: blue;
}

.bathroom-door, .bathroom {
    fill: rebeccapurple;
}
.kitchen {
    fill: green;
}
.living-room {
    fill: red;
}



#svg_world_container {
    width: 80vw;
    height: 60%;
}

/* .us-map {
    width: 120%;
    height: 100%;
} */

title:hover:after { 
    
  width: 120px;
  background-color: orange;
  color: #fff;
  text-align: center;
  border-radius: 6px;
  padding: 5px 0;
  }
  
  /* .tooltip {
    position: fixed;
    z-index: 99;
    font-size: 12px;
    line-height: 12px;
    padding: 5px;
    background: #222;
    color: #fff;
    border: 1px solid #aaa;
    border-radius: 5px;
    font-family: sans-serif;
    box-sizing: border-box;
    visibility: hidden;
    opacity: 0;
  } */
  
  
  /* just for demo */
/*   
  .box {
    margin: 25px;
    padding: 25px;
  } */

  .line {
    fill: none;
    stroke-width: 2px;
  }

  

div.tooltip {
    
    /* position: fixed; */
    z-index: 5000;
    font-size: 12px;
    line-height: 12px;
    padding: 5px;
    background: #222;
    color: #fff;
    border: 1px solid #aaa;
    border-radius: 5px;
    font-family: sans-serif;
    box-sizing: border-box;
    /* visibility: hidden; */
    /* opacity: 0; */
    position: absolute;
    /* padding: 10px; */
    /* font: 12px Arial; */
    /* background: rgba(255, 255, 204, 0.9);
    box-shadow: 1px 1px 10px rgba(128, 128, 128, 0.6); */
    /* border: 0px;
    border-radius: 2px; */
    pointer-events: none;
  }


  /*
  

const g = svg.append("g");


const groups = g
  .selectAll("g")
  .attr("fill", "#363cad")
  .attr("cursor", "pointer")
  .data(arrOfKeys)
  .enter()
  .append("g")
  .attr("class", (d) => d).attr("stroke-width", 2)
//.on("click", clicked)

const tooltip = d3.select("#tooltip")
  .style("opacity", 0)
  .attr("class", "tooltip");

const assets = groups
  .selectAll("path")
  .data(d => geoData[d]?.features)
  .enter()
  .append("path")
  .attr("fill", "#363cad")
  .attr("cursor", "pointer")
  .attr("stroke", "white")
  .attr("stroke-linejoin", "round")
  .attr("stroke-width", 3)
  .attr("d", d3Path)
  .on("mouseover", function (d) {

    tooltip.style("opacity", 0.9);
    tooltip
      .html(() => {

        return `<p></p><p><b>Zone:</b> ${d.target.__data__.properties.Zone}</p>
      <p><b>AREA:</b> ${d.target.__data__.properties.AREA}</p>
      <p><b>LAYER:</b> ${d.target.__data__.properties.LAYER}</p>
      <p><b>Description:</b>  ${client_data.find((e) => e.RoomID == d.target.__data__.properties.LAYER)?.RoomDescription}</p><p></p>`;

      })


    tooltip.append("img")
      .attr("src", "../images/projecs.png")

      tooltip
     .style("left", d.pageX + 10 + "px")
     .style("top", d.pageY - 28 + "px");
  })
  .on("mouseout", d => {
    tooltip.style("opacity", 0);
  });
assets.attr("fill", d => `${client_data.find((e) => e.RoomID == d.properties.LAYER) ? "#2cba00" : "#ff0000"}`)
assets.attr("data-tip", d => `Zone: ${d.properties.Zone}\nAREA: ${d.properties.AREA}\nLAYER: ${d.properties.LAYER}\nDescription: ${client_data.find((e) => e.RoomID == d.properties.LAYER)?.RoomDescription}`)



  
  */